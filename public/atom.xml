<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-07-02T08:55:00.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>zmu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>dcoker离线安装gitlab以及jfrog</title>
    <link href="http://example.com/2025/07/02/docker%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85gitlab%E4%BB%A5%E5%8F%8Ajfrog/"/>
    <id>http://example.com/2025/07/02/docker%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85gitlab%E4%BB%A5%E5%8F%8Ajfrog/</id>
    <published>2025-07-02T08:55:00.000Z</published>
    <updated>2025-07-02T08:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、linux离线配置docker">一、Linux离线配置docker<a title="#一、linux离线配置docker" href="#一、linux离线配置docker"></a></h1><h2 id="1.1-下载docker安装包">1.1 下载docker安装包<a title="#1.1-下载docker安装包" href="#1.1-下载docker安装包"></a></h2><p>（1）下载地址<br>下载地址：<a href="https://download.docker.com/linux/static/stable/x86_64/" target="_blank">https://download.docker.com/linux/static/stable/x86_64/</a><br>阿里云镜像网站：<a href="https://mirrors.aliyun.com/docker-ce/linux/static/stable/x86_64/" target="_blank">https://mirrors.aliyun.com/docker-ce/linux/static/stable/x86_64/</a></p><img src="https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/static_resource/docker离线安装gitlab以及jfrog/image-20250702161519617.png" style=" margin: 0 15px 10px 0;float: left" /><p>（2）解压与拷贝<br>解压并把文件复制到/usr/bin目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf docker-28.1.0.tgz</span><br><span class="line"><span class="built_in">cp</span> docker/* /usr/bin/</span><br></pre></td></tr></table></figure><h2 id="1.2-注册docker服务">1.2 注册docker服务<a title="#1.2-注册docker服务" href="#1.2-注册docker服务"></a></h2><p>在/etc/systemd/system/这个目录下下创建docker.service文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/system/docker.service</span><br></pre></td></tr></table></figure><p>将如下内容拷贝进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line">After=network-online.target firewalld.service</span><br><span class="line">Wants=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">ExecStart=/usr/bin/dockerd</span><br><span class="line">ExecReload=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line">Delegate=<span class="built_in">yes</span></span><br><span class="line">KillMode=process</span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitBurst=3</span><br><span class="line">StartLimitInterval=60s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="1.3-启动docker">1.3 启动docker<a title="#1.3-启动docker" href="#1.3-启动docker"></a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 给docker.service赋权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x /etc/systemd/system/docker.service</span><br><span class="line"><span class="comment"># 重新加载systemd程序的配置文件</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="comment">#启动docker服务</span></span><br><span class="line">systemctl start docker</span><br><span class="line"><span class="comment"># 使docker开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"><span class="comment"># 查看docker服务状态</span></span><br><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/static_resource/docker离线安装gitlab以及jfrog/image-20250702161641829.png" style=" margin: 0 15px 10px 0;float: left" /><h2 id="1.4-修改docker配置文件">1.4 修改docker配置文件<a title="#1.4-修改docker配置文件" href="#1.4-修改docker配置文件"></a></h2><p>docker安装后默认没有daemon.json这个配置文件，需要进行手动创建<br>1、配置镜像加速</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;https://docker.m.daocloud.io&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;https://dockerproxy.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;https://docker.nju.edu.cn&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>2、重启docker服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>4、查看docker版本，正常打印版本即安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/static_resource/docker离线安装gitlab以及jfrog/image-20250702161750754.png" style=" margin: 0 15px 10px 0;float: left" /><h1 id="二、docker离线安装gitlab">二、docker离线安装gitlab<a title="#二、docker离线安装gitlab" href="#二、docker离线安装gitlab"></a></h1><h2 id="2.1-下载gitlab镜像">2.1 下载gitlab镜像<a title="#2.1-下载gitlab镜像" href="#2.1-下载gitlab镜像"></a></h2><p>先在可以联网的linux上下载gitlab镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitlab-ce为稳定版本，后面不填写版本则默认pull最新latest版本</span></span><br><span class="line">docker pull gitlab/gitlab-ce</span><br><span class="line"><span class="comment"># 或指定版本</span></span><br><span class="line">docker pull gitlab/gitlab-ce:17.5.0-ce.0</span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">docker images </span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/static_resource/docker离线安装gitlab以及jfrog/image-20250702153841956.png" style="width: 60%; display: block;margin: 0 15px 10px 0;" />保存镜像<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker save -o gitlab.tar gitlab/gitlab-ce</span></span><br><span class="line">docker save -o gitlab.tar gitlab/gitlab-ce:17.7.0-ce.0</span><br></pre></td></tr></table></figure><p>执行完命令，你会在当前目录获得一个gitlab.tar包</p><h2 id="2.2-docker导入镜像">2.2 docker导入镜像<a title="#2.2-docker导入镜像" href="#2.2-docker导入镜像"></a></h2><p>把下载的gitlab.tar压缩包拷到离线的linux机器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行命令，导入镜像</span></span><br><span class="line">docker load -i gitlab.tar</span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">docker images</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/static_resource/docker离线安装gitlab以及jfrog/image-20250702153841956.png" style="width: 60%; display: block;margin: 0 15px 10px 0;" />导入成功<h2 id="2.3-docker启动gitlab容器并修改配置文件">2.3 docker启动gitlab容器并修改配置文件<a title="#2.3-docker启动gitlab容器并修改配置文件" href="#2.3-docker启动gitlab容器并修改配置文件"></a></h2><p>（1）创建gitlab的配置、数据、日志目录，防止数据丢失，便于问题配查</p><p>创建目录，这个目录可以自己更改</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/gitlab/config </span></span><br><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/gitlab/logs </span></span><br><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/gitlab/<span class="keyword">data</span></span></span><br></pre></td></tr></table></figure><p>（2）启动docker容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -it </span><br><span class="line">-p 10010:10010         </span><br><span class="line">-p 8013:22         </span><br><span class="line">--name  gitlab    </span><br><span class="line">--privileged  </span><br><span class="line">-v /data/gitlab/config:/etc/gitlab         </span><br><span class="line">-v /data/gitlab/logs:/var/log/gitlab         </span><br><span class="line">-v /data/gitlab/data:/var/opt/gitlab         </span><br><span class="line">-v /data/gitlab/logs/reconfigure:/var/log/gitlab/reconfigure         </span><br><span class="line">gitlab/gitlab-ce:17.7.0-ce.0</span><br></pre></td></tr></table></figure><p>查看容器状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/static_resource/docker离线安装gitlab以及jfrog/image-20250702154608890.png" style=" margin: 0 15px 10px 0;float: left" /><p>（3）容器启动之后，编辑/data/gitlab/config/gitlab.rb文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加下面3行</span></span><br><span class="line">external_url <span class="string">&#x27;http://127.0.0.1:10010&#x27;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;gitlab_ssh_host&#x27;</span>] = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;gitlab_shell_ssh_port&#x27;</span>] = 8013</span><br></pre></td></tr></table></figure><p>然后进入容器</p><img src="https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/static_resource/docker离线安装gitlab以及jfrog/image-20250702154802450.png" style=" margin: 0 15px 10px 0;float: left" /><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行更新配置操作</span></span><br><span class="line">gitlab-ctl reconfigure</span><br><span class="line">gitlab-ctl start</span><br><span class="line"><span class="comment"># 执行更新配置操作后退出容器</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>（4）重启gitlab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart gitlab</span><br></pre></td></tr></table></figure><p>（5）登录gitlab</p><p>待gitlab启动后，访问<a href="http://192.168.88.175:10010" target="_blank">http://192.168.88.175:10010</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 账号 root</span></span><br><span class="line"><span class="comment"># 密码通过指令查询，里面有一个Password的字符串就是root账户对应的密码</span></span><br><span class="line"><span class="built_in">cat</span> /data/gitlab/config/initial_root_password</span><br></pre></td></tr></table></figure><h2 id="2.4-修改管理员root密码">2.4 修改管理员root密码<a title="#2.4-修改管理员root密码" href="#2.4-修改管理员root密码"></a></h2><p><strong>登录root用户=&gt;点击用户头像=&gt;Edit profile=&gt;Password</strong></p><img src="https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/static_resource/docker离线安装gitlab以及jfrog/image-20250702155859246.png" style=" margin: 0 15px 10px 0;float: left" /><h2 id="2.5-gitlab中文界面设置">2.5 GitLab中文界面设置<a title="#2.5-gitlab中文界面设置" href="#2.5-gitlab中文界面设置"></a></h2><p><strong>登录root用户=&gt;点击用户头像=&gt;Preferences</strong><br>在Preferences页面中，找到“Localization”区域，将“Language”选项修改为“简体中文”。<br>点击页面下方的“Save changes”按钮，保存语言设置。</p><img src="https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/static_resource/docker离线安装gitlab以及jfrog/image-20250702160237214.png" style=" margin: 0 15px 10px 0;float: left" /><h1 id="三、docker离线安装jfrog-artifactory">三、docker离线安装jfrog-artifactory<a title="#三、docker离线安装jfrog-artifactory" href="#三、docker离线安装jfrog-artifactory"></a></h1><h2 id="3.1-下载jfrog镜像">3.1 下载jfrog镜像<a title="#3.1-下载jfrog镜像" href="#3.1-下载jfrog镜像"></a></h2><p>先在可以联网的linux上下载jfrog镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull docker.bintray.io/jfrog/artifactory-oss:latest</span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">docker images</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/static_resource/docker离线安装gitlab以及jfrog/image-20250702153841956.png" style="width: 60%; display: block;margin: 0 15px 10px 0;" /><p>保存镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save -o docker.bintray.io/jfrog/artifactory-oss:latest</span><br></pre></td></tr></table></figure><p>执行完命令，你会在当前目录获得一个jfrog.tar包</p><h2 id="3.2-docker导入镜像">3.2 docker导入镜像<a title="#3.2-docker导入镜像" href="#3.2-docker导入镜像"></a></h2><p>把下载的jfrog.tar压缩包拷到离线的linux机器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行命令，导入镜像</span></span><br><span class="line">docker load -i jfrog.tar</span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">docker images</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/static_resource/docker离线安装gitlab以及jfrog/image-20250702153841956.png" style="width: 60%; display: block;margin: 0 15px 10px 0;" />导入成功<h2 id="3.3-docker启动jfrog容器并修改配置文件">3.3 docker启动jfrog容器并修改配置文件<a title="#3.3-docker启动jfrog容器并修改配置文件" href="#3.3-docker启动jfrog容器并修改配置文件"></a></h2><p>（1）设置jfrog数据文件夹权限，jfrog默认使用1030用户启动，将权限赋给1030</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R 1030:1030 /data/jfrog/data</span><br><span class="line"><span class="built_in">chmod</span> -R 775 /data/jfrog/data</span><br></pre></td></tr></table></figure><p>（2）关闭防火墙，关闭selinux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭防火墙</span></span><br><span class="line">sytemctl stop firewalld</span><br><span class="line"><span class="comment"># 关闭Selinux</span></span><br><span class="line">vi /etc/selinux/config</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config</span></span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><p>（3）启动docker容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d</span><br><span class="line">--name jfrog-artifactory </span><br><span class="line">-v /data/jfrog/data:/var/opt/jfrog/artifactory </span><br><span class="line">-p 8081:8081 -p 8082:8082 </span><br><span class="line">docker.bintray.io/jfrog/artifactory-oss:latest</span><br></pre></td></tr></table></figure><p>查看容器状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><p>（4）登录jfrog-artifactory</p><p>待jfrog启动后，访问<a href="http://192.168.88.175:8082" target="_blank">http://192.168.88.175:8082</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 账号 admin</span></span><br><span class="line"><span class="comment"># 密码 password</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、linux离线配置docker&quot;&gt;一、Linux离线配置docker&lt;a title=&quot;#一、linux离线配置docker&quot; href=&quot;#一、linux离线配置docker&quot;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&quot;1.1-下载docker安装包&quot;&gt;1.1 下</summary>
      
    
    
    
    <category term="ops" scheme="http://example.com/categories/ops/"/>
    
    
    <category term="docker" scheme="http://example.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://example.com/2025/06/25/test/"/>
    <id>http://example.com/2025/06/25/test/</id>
    <published>2025-06-25T02:18:22.000Z</published>
    <updated>2025-06-25T02:18:22.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>首先，我测试一段文字</p></li><li><p>然后，我将插入图片</p><p><img src="https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/static_resource/xxxxxx.jpg" alt="img" loading="lazy" class="φbp"></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;首先，我测试一段文字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后，我将插入图片&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/pairs-vip/source-pairs-vip.github.io@main/s</summary>
      
    
    
    
    <category term="test" scheme="http://example.com/categories/test/"/>
    
    
    <category term="test" scheme="http://example.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2025/06/24/hello-world/"/>
    <id>http://example.com/2025/06/24/hello-world/</id>
    <published>2025-06-24T09:00:20.804Z</published>
    <updated>2025-06-24T08:53:18.167Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank">GitHub</a>.</p><h2 id="quick-start">Quick Start<a title="#quick-start" href="#quick-start"></a></h2><h3 id="create-a-new-post">Create a new post<a title="#create-a-new-post" href="#create-a-new-post"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank">Writing</a></p><h3 id="run-server">Run server<a title="#run-server" href="#run-server"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank">Server</a></p><h3 id="generate-static-files">Generate static files<a title="#generate-static-files" href="#generate-static-files"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites<a title="#deploy-to-remote-sites" href="#deploy-to-remote-sites"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; targe</summary>
      
    
    
    
    
  </entry>
  
</feed>
